class Device
types
	public vecPlate = seq1 of char;
	public Status = <Able> | <Disable>;
	public NumCard = int;
	public moneyDeposit = real;
	public monthTopay = int;
	public bill = rat;
	public warnings = set of Warning;
	public warCount = nat;
	

instance variables
	static public warns : warnings := {};
	public wcount : warCount := card warns;
	public plate: vecPlate;
	public cardN: NumCard;
	public status: Status := <Disable>;
	public moneyDep : moneyDeposit;
	public monthBill: map monthTopay to bill := {1|->0,2|->0,
																					3|->0, 4|->0,5|->0,
																					6|->0,7|->0,8|->0,
																					9|->0, 10|->0,11|->0,
																					12|->0};
																																					

operations

	-- Device Constructor
	public Device: vecPlate * NumCard * moneyDeposit  ==> Device
	Device(vp, nc, md) == (
			plate := vp;
			cardN := nc;
			moneyDep := md;
			return self		
	);
	
	-- Set Device Status, when registed on green way, for example
	public setStatus: Status ==> ()
	setStatus(stat) ==
			status := stat;
			
			-- Set Month Bill
			public setMonthBill: monthTopay * bill ==> ()
				setMonthBill(m, q) ==
				monthBill(m) := q;
			
			-- Create new warning
				public newWarning: Warning ==> ()
	newWarning(w) == (
		warns := {w} union warns;
		wcount := wcount + 1;
		IO`println("New warning registed!");
	)
	post(wcount = card warns);
	
	-- add payment of a certain month
	public newMonthPayment: monthTopay * bill ==> ()
	newMonthPayment(m,b) ==
	(
		monthBill(m) := monthBill(m) + b;	
	);
	
		-- add new deposit
	public addDeposit: moneyDeposit ==> ()
	addDeposit(d) ==
	(
		moneyDep := moneyDep + d;	
	);
	
	public subDeposit: moneyDeposit ==> ()
	subDeposit(d) ==
	(
		moneyDep := moneyDep - d;	
	);
	
end Device