class GreenWay
types
		public gwDevices = set of Device;
		public gwServices = set of ServiceProvider;
		public devCount = nat;
		public sevCount = nat;
		public money = rat;
		public month = seq1 of char;
		
values
-- TODO Define values here
instance variables
	static public gwdevices : gwDevices := {};
	static public gwservices : gwServices := {};
	public devicesCount : devCount := card gwdevices;
	public servicesCount : sevCount := card gwservices;
operations

	-- GreenWay Constructor
	public GreenWay : () ==> GreenWay
	GreenWay() == (
		return self);
	
	-- Regist device on green way
	public newDevice: Device ==> ()
	newDevice(device) == (
		gwdevices := {device} union gwdevices;
		devicesCount := devicesCount + 1;
		device.setStatus(<Able>);
		IO`println("New device registed!");
	)
	post(devicesCount = card gwdevices);
	
	-- Regist service on green way
	public newServiceProvider: ServiceProvider ==> ()
	newServiceProvider(service) == (
		gwservices := {service} union gwservices;
		servicesCount := servicesCount + 1;
		IO`println("New service registed!");
	)
	post(servicesCount = card gwservices);
	
	
functions
-- TODO Define functiones here
traces
-- TODO Define Combinatorial Test Traces here
end GreenWay