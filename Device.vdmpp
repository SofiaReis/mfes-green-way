class Device
types
	public vecPlate = seq1 of char;
	public Status = <Able> | <Disable>;
	public NumCard = seq1 of char;
	public monthTopay = seq1 of char;
	public bill = rat;
values
-- TODO Define values here
instance variables
	public plate: vecPlate;
	public cardN: NumCard;
	public status: Status := <Disable>;
	public monthBill: map monthTopay to bill := {"January"|->0,"February"|->0,
																					"March"|->0, "April"|->0,"May"|->0,
																					"June"|->0,"July"|->0,"August"|->0,
																					"September"|->0, "October"|->0,"November"|->0,
																					"December"|->0};

operations

	-- Device Constructor
	public Device: vecPlate * NumCard  ==> Device
	Device(vp, nc) == (
			plate := vp;
			cardN := nc;
			return self		
	);
	
	-- Set Device Status, when registed on green way, for example
	public setStatus: Status ==> ()
	setStatus(stat) ==
			status := stat;
	
	-- add payment of a certain month
	public newMonthPayment: monthTopay * bill ==> ()
	newMonthPayment(m,b) ==
	(
		monthBill(m) := monthBill(m) + b;	
	);
	
	
	
functions
-- TODO Define functiones here
traces
-- TODO Define Combinatorial Test Traces here
end Device